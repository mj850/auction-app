import * as fm from "../fetch";
import type { QueryEVMAddressBySeiAddressRequest, QueryEVMAddressBySeiAddressResponse, QueryPointeeRequest, QueryPointeeResponse, QueryPointerRequest, QueryPointerResponse, QueryPointerVersionRequest, QueryPointerVersionResponse, QuerySeiAddressByEVMAddressRequest, QuerySeiAddressByEVMAddressResponse, QueryStaticCallRequest, QueryStaticCallResponse } from "../../types/evm/query.ts";
export declare class Query {
    static SeiAddressByEVMAddress(req: QuerySeiAddressByEVMAddressRequest, initReq?: fm.InitReq): Promise<QuerySeiAddressByEVMAddressResponse>;
    static EVMAddressBySeiAddress(req: QueryEVMAddressBySeiAddressRequest, initReq?: fm.InitReq): Promise<QueryEVMAddressBySeiAddressResponse>;
    static StaticCall(req: QueryStaticCallRequest, initReq?: fm.InitReq): Promise<QueryStaticCallResponse>;
    static Pointer(req: QueryPointerRequest, initReq?: fm.InitReq): Promise<QueryPointerResponse>;
    static PointerVersion(req: QueryPointerVersionRequest, initReq?: fm.InitReq): Promise<QueryPointerVersionResponse>;
    static Pointee(req: QueryPointeeRequest, initReq?: fm.InitReq): Promise<QueryPointeeResponse>;
}
