import type { GeneratedType } from "@cosmjs/proto-signing";
import type { QueryDenomAllowListRequest as QueryDenomAllowListRequest_type, QueryDenomAllowListResponse as QueryDenomAllowListResponse_type, QueryDenomAuthorityMetadataRequest as QueryDenomAuthorityMetadataRequest_type, QueryDenomAuthorityMetadataResponse as QueryDenomAuthorityMetadataResponse_type, QueryDenomMetadataRequest as QueryDenomMetadataRequest_type, QueryDenomMetadataResponse as QueryDenomMetadataResponse_type, QueryDenomsFromCreatorRequest as QueryDenomsFromCreatorRequest_type, QueryDenomsFromCreatorResponse as QueryDenomsFromCreatorResponse_type, QueryParamsRequest as QueryParamsRequest_type, QueryParamsResponse as QueryParamsResponse_type } from "../../types/tokenfactory";
import type { MessageFns } from "../common";
export interface QueryParamsRequest extends QueryParamsRequest_type {
}
export interface QueryParamsResponse extends QueryParamsResponse_type {
}
export interface QueryDenomAuthorityMetadataRequest extends QueryDenomAuthorityMetadataRequest_type {
}
export interface QueryDenomAuthorityMetadataResponse extends QueryDenomAuthorityMetadataResponse_type {
}
export interface QueryDenomsFromCreatorRequest extends QueryDenomsFromCreatorRequest_type {
}
export interface QueryDenomsFromCreatorResponse extends QueryDenomsFromCreatorResponse_type {
}
export interface QueryDenomMetadataRequest extends QueryDenomMetadataRequest_type {
}
export interface QueryDenomMetadataResponse extends QueryDenomMetadataResponse_type {
}
export interface QueryDenomAllowListRequest extends QueryDenomAllowListRequest_type {
}
export interface QueryDenomAllowListResponse extends QueryDenomAllowListResponse_type {
}
export declare const QueryParamsRequest: MessageFns<QueryParamsRequest, "seiprotocol.seichain.tokenfactory.QueryParamsRequest">;
export declare const QueryParamsResponse: MessageFns<QueryParamsResponse, "seiprotocol.seichain.tokenfactory.QueryParamsResponse">;
export declare const QueryDenomAuthorityMetadataRequest: MessageFns<QueryDenomAuthorityMetadataRequest, "seiprotocol.seichain.tokenfactory.QueryDenomAuthorityMetadataRequest">;
export declare const QueryDenomAuthorityMetadataResponse: MessageFns<QueryDenomAuthorityMetadataResponse, "seiprotocol.seichain.tokenfactory.QueryDenomAuthorityMetadataResponse">;
export declare const QueryDenomsFromCreatorRequest: MessageFns<QueryDenomsFromCreatorRequest, "seiprotocol.seichain.tokenfactory.QueryDenomsFromCreatorRequest">;
export declare const QueryDenomsFromCreatorResponse: MessageFns<QueryDenomsFromCreatorResponse, "seiprotocol.seichain.tokenfactory.QueryDenomsFromCreatorResponse">;
export declare const QueryDenomMetadataRequest: MessageFns<QueryDenomMetadataRequest, "seiprotocol.seichain.tokenfactory.QueryDenomMetadataRequest">;
export declare const QueryDenomMetadataResponse: MessageFns<QueryDenomMetadataResponse, "seiprotocol.seichain.tokenfactory.QueryDenomMetadataResponse">;
export declare const QueryDenomAllowListRequest: MessageFns<QueryDenomAllowListRequest, "seiprotocol.seichain.tokenfactory.QueryDenomAllowListRequest">;
export declare const QueryDenomAllowListResponse: MessageFns<QueryDenomAllowListResponse, "seiprotocol.seichain.tokenfactory.QueryDenomAllowListResponse">;
export declare const registry: Array<[string, GeneratedType]>;
export declare const aminoConverters: {
    "/seiprotocol.seichain.tokenfactory.QueryParamsRequest": {
        aminoType: string;
        toAmino: (message: QueryParamsRequest) => {};
        fromAmino: (object: QueryParamsRequest) => {};
    };
    "/seiprotocol.seichain.tokenfactory.QueryParamsResponse": {
        aminoType: string;
        toAmino: (message: QueryParamsResponse) => {
            params?: import("../../types/tokenfactory").Params;
        };
        fromAmino: (object: QueryParamsResponse) => {
            params?: import("../../types/tokenfactory").Params;
        };
    };
    "/seiprotocol.seichain.tokenfactory.QueryDenomAuthorityMetadataRequest": {
        aminoType: string;
        toAmino: (message: QueryDenomAuthorityMetadataRequest) => {
            denom: string;
        };
        fromAmino: (object: QueryDenomAuthorityMetadataRequest) => {
            denom: string;
        };
    };
    "/seiprotocol.seichain.tokenfactory.QueryDenomAuthorityMetadataResponse": {
        aminoType: string;
        toAmino: (message: QueryDenomAuthorityMetadataResponse) => {
            authority_metadata?: import("../../types/tokenfactory").DenomAuthorityMetadata;
        };
        fromAmino: (object: QueryDenomAuthorityMetadataResponse) => {
            authority_metadata?: import("../../types/tokenfactory").DenomAuthorityMetadata;
        };
    };
    "/seiprotocol.seichain.tokenfactory.QueryDenomsFromCreatorRequest": {
        aminoType: string;
        toAmino: (message: QueryDenomsFromCreatorRequest) => {
            creator: string;
        };
        fromAmino: (object: QueryDenomsFromCreatorRequest) => {
            creator: string;
        };
    };
    "/seiprotocol.seichain.tokenfactory.QueryDenomsFromCreatorResponse": {
        aminoType: string;
        toAmino: (message: QueryDenomsFromCreatorResponse) => {
            denoms: string[];
        };
        fromAmino: (object: QueryDenomsFromCreatorResponse) => {
            denoms: string[];
        };
    };
    "/seiprotocol.seichain.tokenfactory.QueryDenomMetadataRequest": {
        aminoType: string;
        toAmino: (message: QueryDenomMetadataRequest) => {
            denom: string;
        };
        fromAmino: (object: QueryDenomMetadataRequest) => {
            denom: string;
        };
    };
    "/seiprotocol.seichain.tokenfactory.QueryDenomMetadataResponse": {
        aminoType: string;
        toAmino: (message: QueryDenomMetadataResponse) => {
            metadata?: import("../../types/cosmos/bank/v1beta1").Metadata;
        };
        fromAmino: (object: QueryDenomMetadataResponse) => {
            metadata?: import("../../types/cosmos/bank/v1beta1").Metadata;
        };
    };
    "/seiprotocol.seichain.tokenfactory.QueryDenomAllowListRequest": {
        aminoType: string;
        toAmino: (message: QueryDenomAllowListRequest) => {
            denom: string;
        };
        fromAmino: (object: QueryDenomAllowListRequest) => {
            denom: string;
        };
    };
    "/seiprotocol.seichain.tokenfactory.QueryDenomAllowListResponse": {
        aminoType: string;
        toAmino: (message: QueryDenomAllowListResponse) => {
            allow_list?: import("../../types/cosmos/bank/v1beta1").AllowList;
        };
        fromAmino: (object: QueryDenomAllowListResponse) => {
            allow_list?: import("../../types/cosmos/bank/v1beta1").AllowList;
        };
    };
};
