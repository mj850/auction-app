import type { GeneratedType } from "@cosmjs/proto-signing";
import type { MsgBurnResponse as MsgBurnResponse_type, MsgBurn as MsgBurn_type, MsgChangeAdminResponse as MsgChangeAdminResponse_type, MsgChangeAdmin as MsgChangeAdmin_type, MsgCreateDenomResponse as MsgCreateDenomResponse_type, MsgCreateDenom as MsgCreateDenom_type, MsgMintResponse as MsgMintResponse_type, MsgMint as MsgMint_type, MsgSetDenomMetadataResponse as MsgSetDenomMetadataResponse_type, MsgSetDenomMetadata as MsgSetDenomMetadata_type, MsgUpdateDenomResponse as MsgUpdateDenomResponse_type, MsgUpdateDenom as MsgUpdateDenom_type } from "../../types/tokenfactory";
import type { MessageFns } from "../common";
export interface MsgCreateDenom extends MsgCreateDenom_type {
}
export interface MsgCreateDenomResponse extends MsgCreateDenomResponse_type {
}
export interface MsgMint extends MsgMint_type {
}
export interface MsgMintResponse extends MsgMintResponse_type {
}
export interface MsgBurn extends MsgBurn_type {
}
export interface MsgBurnResponse extends MsgBurnResponse_type {
}
export interface MsgChangeAdmin extends MsgChangeAdmin_type {
}
export interface MsgChangeAdminResponse extends MsgChangeAdminResponse_type {
}
export interface MsgSetDenomMetadata extends MsgSetDenomMetadata_type {
}
export interface MsgSetDenomMetadataResponse extends MsgSetDenomMetadataResponse_type {
}
export interface MsgUpdateDenom extends MsgUpdateDenom_type {
}
export interface MsgUpdateDenomResponse extends MsgUpdateDenomResponse_type {
}
export declare const MsgCreateDenom: MessageFns<MsgCreateDenom, "seiprotocol.seichain.tokenfactory.MsgCreateDenom">;
export declare const MsgCreateDenomResponse: MessageFns<MsgCreateDenomResponse, "seiprotocol.seichain.tokenfactory.MsgCreateDenomResponse">;
export declare const MsgMint: MessageFns<MsgMint, "seiprotocol.seichain.tokenfactory.MsgMint">;
export declare const MsgMintResponse: MessageFns<MsgMintResponse, "seiprotocol.seichain.tokenfactory.MsgMintResponse">;
export declare const MsgBurn: MessageFns<MsgBurn, "seiprotocol.seichain.tokenfactory.MsgBurn">;
export declare const MsgBurnResponse: MessageFns<MsgBurnResponse, "seiprotocol.seichain.tokenfactory.MsgBurnResponse">;
export declare const MsgChangeAdmin: MessageFns<MsgChangeAdmin, "seiprotocol.seichain.tokenfactory.MsgChangeAdmin">;
export declare const MsgChangeAdminResponse: MessageFns<MsgChangeAdminResponse, "seiprotocol.seichain.tokenfactory.MsgChangeAdminResponse">;
export declare const MsgSetDenomMetadata: MessageFns<MsgSetDenomMetadata, "seiprotocol.seichain.tokenfactory.MsgSetDenomMetadata">;
export declare const MsgSetDenomMetadataResponse: MessageFns<MsgSetDenomMetadataResponse, "seiprotocol.seichain.tokenfactory.MsgSetDenomMetadataResponse">;
export declare const MsgUpdateDenom: MessageFns<MsgUpdateDenom, "seiprotocol.seichain.tokenfactory.MsgUpdateDenom">;
export declare const MsgUpdateDenomResponse: MessageFns<MsgUpdateDenomResponse, "seiprotocol.seichain.tokenfactory.MsgUpdateDenomResponse">;
export declare const registry: Array<[string, GeneratedType]>;
export declare const aminoConverters: {
    "/seiprotocol.seichain.tokenfactory.MsgCreateDenom": {
        aminoType: string;
        toAmino: (message: MsgCreateDenom) => {
            sender: string;
            subdenom: string;
            allow_list?: import("../../types/cosmos/bank/v1beta1").AllowList;
        };
        fromAmino: (object: MsgCreateDenom) => {
            sender: string;
            subdenom: string;
            allow_list?: import("../../types/cosmos/bank/v1beta1").AllowList;
        };
    };
    "/seiprotocol.seichain.tokenfactory.MsgCreateDenomResponse": {
        aminoType: string;
        toAmino: (message: MsgCreateDenomResponse) => {
            new_token_denom: string;
        };
        fromAmino: (object: MsgCreateDenomResponse) => {
            new_token_denom: string;
        };
    };
    "/seiprotocol.seichain.tokenfactory.MsgMint": {
        aminoType: string;
        toAmino: (message: MsgMint) => {
            sender: string;
            amount?: import("../../types/cosmos/base/v1beta1").Coin;
        };
        fromAmino: (object: MsgMint) => {
            sender: string;
            amount?: import("../../types/cosmos/base/v1beta1").Coin;
        };
    };
    "/seiprotocol.seichain.tokenfactory.MsgMintResponse": {
        aminoType: string;
        toAmino: (message: MsgMintResponse) => {};
        fromAmino: (object: MsgMintResponse) => {};
    };
    "/seiprotocol.seichain.tokenfactory.MsgBurn": {
        aminoType: string;
        toAmino: (message: MsgBurn) => {
            sender: string;
            amount?: import("../../types/cosmos/base/v1beta1").Coin;
        };
        fromAmino: (object: MsgBurn) => {
            sender: string;
            amount?: import("../../types/cosmos/base/v1beta1").Coin;
        };
    };
    "/seiprotocol.seichain.tokenfactory.MsgBurnResponse": {
        aminoType: string;
        toAmino: (message: MsgBurnResponse) => {};
        fromAmino: (object: MsgBurnResponse) => {};
    };
    "/seiprotocol.seichain.tokenfactory.MsgChangeAdmin": {
        aminoType: string;
        toAmino: (message: MsgChangeAdmin) => {
            sender: string;
            denom: string;
            new_admin: string;
        };
        fromAmino: (object: MsgChangeAdmin) => {
            sender: string;
            denom: string;
            new_admin: string;
        };
    };
    "/seiprotocol.seichain.tokenfactory.MsgChangeAdminResponse": {
        aminoType: string;
        toAmino: (message: MsgChangeAdminResponse) => {};
        fromAmino: (object: MsgChangeAdminResponse) => {};
    };
    "/seiprotocol.seichain.tokenfactory.MsgSetDenomMetadata": {
        aminoType: string;
        toAmino: (message: MsgSetDenomMetadata) => {
            sender: string;
            metadata?: import("../../types/cosmos/bank/v1beta1").Metadata;
        };
        fromAmino: (object: MsgSetDenomMetadata) => {
            sender: string;
            metadata?: import("../../types/cosmos/bank/v1beta1").Metadata;
        };
    };
    "/seiprotocol.seichain.tokenfactory.MsgSetDenomMetadataResponse": {
        aminoType: string;
        toAmino: (message: MsgSetDenomMetadataResponse) => {};
        fromAmino: (object: MsgSetDenomMetadataResponse) => {};
    };
    "/seiprotocol.seichain.tokenfactory.MsgUpdateDenom": {
        aminoType: string;
        toAmino: (message: MsgUpdateDenom) => {
            sender: string;
            denom: string;
            allow_list?: import("../../types/cosmos/bank/v1beta1").AllowList;
        };
        fromAmino: (object: MsgUpdateDenom) => {
            sender: string;
            denom: string;
            allow_list?: import("../../types/cosmos/bank/v1beta1").AllowList;
        };
    };
    "/seiprotocol.seichain.tokenfactory.MsgUpdateDenomResponse": {
        aminoType: string;
        toAmino: (message: MsgUpdateDenomResponse) => {};
        fromAmino: (object: MsgUpdateDenomResponse) => {};
    };
};
