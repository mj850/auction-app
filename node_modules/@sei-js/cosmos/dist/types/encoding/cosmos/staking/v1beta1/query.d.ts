import type { GeneratedType } from "@cosmjs/proto-signing";
import type { QueryDelegationRequest as QueryDelegationRequest_type, QueryDelegationResponse as QueryDelegationResponse_type, QueryDelegatorDelegationsRequest as QueryDelegatorDelegationsRequest_type, QueryDelegatorDelegationsResponse as QueryDelegatorDelegationsResponse_type, QueryDelegatorUnbondingDelegationsRequest as QueryDelegatorUnbondingDelegationsRequest_type, QueryDelegatorUnbondingDelegationsResponse as QueryDelegatorUnbondingDelegationsResponse_type, QueryDelegatorValidatorRequest as QueryDelegatorValidatorRequest_type, QueryDelegatorValidatorResponse as QueryDelegatorValidatorResponse_type, QueryDelegatorValidatorsRequest as QueryDelegatorValidatorsRequest_type, QueryDelegatorValidatorsResponse as QueryDelegatorValidatorsResponse_type, QueryHistoricalInfoRequest as QueryHistoricalInfoRequest_type, QueryHistoricalInfoResponse as QueryHistoricalInfoResponse_type, QueryParamsRequest as QueryParamsRequest_type, QueryParamsResponse as QueryParamsResponse_type, QueryPoolRequest as QueryPoolRequest_type, QueryPoolResponse as QueryPoolResponse_type, QueryRedelegationsRequest as QueryRedelegationsRequest_type, QueryRedelegationsResponse as QueryRedelegationsResponse_type, QueryUnbondingDelegationRequest as QueryUnbondingDelegationRequest_type, QueryUnbondingDelegationResponse as QueryUnbondingDelegationResponse_type, QueryValidatorDelegationsRequest as QueryValidatorDelegationsRequest_type, QueryValidatorDelegationsResponse as QueryValidatorDelegationsResponse_type, QueryValidatorRequest as QueryValidatorRequest_type, QueryValidatorResponse as QueryValidatorResponse_type, QueryValidatorUnbondingDelegationsRequest as QueryValidatorUnbondingDelegationsRequest_type, QueryValidatorUnbondingDelegationsResponse as QueryValidatorUnbondingDelegationsResponse_type, QueryValidatorsRequest as QueryValidatorsRequest_type, QueryValidatorsResponse as QueryValidatorsResponse_type } from "../../../../types/cosmos/staking/v1beta1";
import type { MessageFns } from "../../../common";
export interface QueryValidatorsRequest extends QueryValidatorsRequest_type {
}
export interface QueryValidatorsResponse extends QueryValidatorsResponse_type {
}
export interface QueryValidatorRequest extends QueryValidatorRequest_type {
}
export interface QueryValidatorResponse extends QueryValidatorResponse_type {
}
export interface QueryValidatorDelegationsRequest extends QueryValidatorDelegationsRequest_type {
}
export interface QueryValidatorDelegationsResponse extends QueryValidatorDelegationsResponse_type {
}
export interface QueryValidatorUnbondingDelegationsRequest extends QueryValidatorUnbondingDelegationsRequest_type {
}
export interface QueryValidatorUnbondingDelegationsResponse extends QueryValidatorUnbondingDelegationsResponse_type {
}
export interface QueryDelegationRequest extends QueryDelegationRequest_type {
}
export interface QueryDelegationResponse extends QueryDelegationResponse_type {
}
export interface QueryUnbondingDelegationRequest extends QueryUnbondingDelegationRequest_type {
}
export interface QueryUnbondingDelegationResponse extends QueryUnbondingDelegationResponse_type {
}
export interface QueryDelegatorDelegationsRequest extends QueryDelegatorDelegationsRequest_type {
}
export interface QueryDelegatorDelegationsResponse extends QueryDelegatorDelegationsResponse_type {
}
export interface QueryDelegatorUnbondingDelegationsRequest extends QueryDelegatorUnbondingDelegationsRequest_type {
}
export interface QueryDelegatorUnbondingDelegationsResponse extends QueryDelegatorUnbondingDelegationsResponse_type {
}
export interface QueryRedelegationsRequest extends QueryRedelegationsRequest_type {
}
export interface QueryRedelegationsResponse extends QueryRedelegationsResponse_type {
}
export interface QueryDelegatorValidatorsRequest extends QueryDelegatorValidatorsRequest_type {
}
export interface QueryDelegatorValidatorsResponse extends QueryDelegatorValidatorsResponse_type {
}
export interface QueryDelegatorValidatorRequest extends QueryDelegatorValidatorRequest_type {
}
export interface QueryDelegatorValidatorResponse extends QueryDelegatorValidatorResponse_type {
}
export interface QueryHistoricalInfoRequest extends QueryHistoricalInfoRequest_type {
}
export interface QueryHistoricalInfoResponse extends QueryHistoricalInfoResponse_type {
}
export interface QueryPoolRequest extends QueryPoolRequest_type {
}
export interface QueryPoolResponse extends QueryPoolResponse_type {
}
export interface QueryParamsRequest extends QueryParamsRequest_type {
}
export interface QueryParamsResponse extends QueryParamsResponse_type {
}
export declare const QueryValidatorsRequest: MessageFns<QueryValidatorsRequest, "cosmos.staking.v1beta1.QueryValidatorsRequest">;
export declare const QueryValidatorsResponse: MessageFns<QueryValidatorsResponse, "cosmos.staking.v1beta1.QueryValidatorsResponse">;
export declare const QueryValidatorRequest: MessageFns<QueryValidatorRequest, "cosmos.staking.v1beta1.QueryValidatorRequest">;
export declare const QueryValidatorResponse: MessageFns<QueryValidatorResponse, "cosmos.staking.v1beta1.QueryValidatorResponse">;
export declare const QueryValidatorDelegationsRequest: MessageFns<QueryValidatorDelegationsRequest, "cosmos.staking.v1beta1.QueryValidatorDelegationsRequest">;
export declare const QueryValidatorDelegationsResponse: MessageFns<QueryValidatorDelegationsResponse, "cosmos.staking.v1beta1.QueryValidatorDelegationsResponse">;
export declare const QueryValidatorUnbondingDelegationsRequest: MessageFns<QueryValidatorUnbondingDelegationsRequest, "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest">;
export declare const QueryValidatorUnbondingDelegationsResponse: MessageFns<QueryValidatorUnbondingDelegationsResponse, "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse">;
export declare const QueryDelegationRequest: MessageFns<QueryDelegationRequest, "cosmos.staking.v1beta1.QueryDelegationRequest">;
export declare const QueryDelegationResponse: MessageFns<QueryDelegationResponse, "cosmos.staking.v1beta1.QueryDelegationResponse">;
export declare const QueryUnbondingDelegationRequest: MessageFns<QueryUnbondingDelegationRequest, "cosmos.staking.v1beta1.QueryUnbondingDelegationRequest">;
export declare const QueryUnbondingDelegationResponse: MessageFns<QueryUnbondingDelegationResponse, "cosmos.staking.v1beta1.QueryUnbondingDelegationResponse">;
export declare const QueryDelegatorDelegationsRequest: MessageFns<QueryDelegatorDelegationsRequest, "cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest">;
export declare const QueryDelegatorDelegationsResponse: MessageFns<QueryDelegatorDelegationsResponse, "cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse">;
export declare const QueryDelegatorUnbondingDelegationsRequest: MessageFns<QueryDelegatorUnbondingDelegationsRequest, "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest">;
export declare const QueryDelegatorUnbondingDelegationsResponse: MessageFns<QueryDelegatorUnbondingDelegationsResponse, "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse">;
export declare const QueryRedelegationsRequest: MessageFns<QueryRedelegationsRequest, "cosmos.staking.v1beta1.QueryRedelegationsRequest">;
export declare const QueryRedelegationsResponse: MessageFns<QueryRedelegationsResponse, "cosmos.staking.v1beta1.QueryRedelegationsResponse">;
export declare const QueryDelegatorValidatorsRequest: MessageFns<QueryDelegatorValidatorsRequest, "cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest">;
export declare const QueryDelegatorValidatorsResponse: MessageFns<QueryDelegatorValidatorsResponse, "cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse">;
export declare const QueryDelegatorValidatorRequest: MessageFns<QueryDelegatorValidatorRequest, "cosmos.staking.v1beta1.QueryDelegatorValidatorRequest">;
export declare const QueryDelegatorValidatorResponse: MessageFns<QueryDelegatorValidatorResponse, "cosmos.staking.v1beta1.QueryDelegatorValidatorResponse">;
export declare const QueryHistoricalInfoRequest: MessageFns<QueryHistoricalInfoRequest, "cosmos.staking.v1beta1.QueryHistoricalInfoRequest">;
export declare const QueryHistoricalInfoResponse: MessageFns<QueryHistoricalInfoResponse, "cosmos.staking.v1beta1.QueryHistoricalInfoResponse">;
export declare const QueryPoolRequest: MessageFns<QueryPoolRequest, "cosmos.staking.v1beta1.QueryPoolRequest">;
export declare const QueryPoolResponse: MessageFns<QueryPoolResponse, "cosmos.staking.v1beta1.QueryPoolResponse">;
export declare const QueryParamsRequest: MessageFns<QueryParamsRequest, "cosmos.staking.v1beta1.QueryParamsRequest">;
export declare const QueryParamsResponse: MessageFns<QueryParamsResponse, "cosmos.staking.v1beta1.QueryParamsResponse">;
export declare const registry: Array<[string, GeneratedType]>;
export declare const aminoConverters: {
    "/cosmos.staking.v1beta1.QueryValidatorsRequest": {
        aminoType: string;
        toAmino: (message: QueryValidatorsRequest) => {
            status: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
        fromAmino: (object: QueryValidatorsRequest) => {
            status: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
    };
    "/cosmos.staking.v1beta1.QueryValidatorsResponse": {
        aminoType: string;
        toAmino: (message: QueryValidatorsResponse) => {
            validators: import("../../../../types/cosmos/staking/v1beta1").Validator[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
        fromAmino: (object: QueryValidatorsResponse) => {
            validators: import("../../../../types/cosmos/staking/v1beta1").Validator[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
    };
    "/cosmos.staking.v1beta1.QueryValidatorRequest": {
        aminoType: string;
        toAmino: (message: QueryValidatorRequest) => {
            validator_addr: string;
        };
        fromAmino: (object: QueryValidatorRequest) => {
            validator_addr: string;
        };
    };
    "/cosmos.staking.v1beta1.QueryValidatorResponse": {
        aminoType: string;
        toAmino: (message: QueryValidatorResponse) => {
            validator?: import("../../../../types/cosmos/staking/v1beta1").Validator;
        };
        fromAmino: (object: QueryValidatorResponse) => {
            validator?: import("../../../../types/cosmos/staking/v1beta1").Validator;
        };
    };
    "/cosmos.staking.v1beta1.QueryValidatorDelegationsRequest": {
        aminoType: string;
        toAmino: (message: QueryValidatorDelegationsRequest) => {
            validator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
        fromAmino: (object: QueryValidatorDelegationsRequest) => {
            validator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
    };
    "/cosmos.staking.v1beta1.QueryValidatorDelegationsResponse": {
        aminoType: string;
        toAmino: (message: QueryValidatorDelegationsResponse) => {
            delegation_responses: import("../../../../types/cosmos/staking/v1beta1").DelegationResponse[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
        fromAmino: (object: QueryValidatorDelegationsResponse) => {
            delegation_responses: import("../../../../types/cosmos/staking/v1beta1").DelegationResponse[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
    };
    "/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest": {
        aminoType: string;
        toAmino: (message: QueryValidatorUnbondingDelegationsRequest) => {
            validator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
        fromAmino: (object: QueryValidatorUnbondingDelegationsRequest) => {
            validator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
    };
    "/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse": {
        aminoType: string;
        toAmino: (message: QueryValidatorUnbondingDelegationsResponse) => {
            unbonding_responses: import("../../../../types/cosmos/staking/v1beta1").UnbondingDelegation[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
        fromAmino: (object: QueryValidatorUnbondingDelegationsResponse) => {
            unbonding_responses: import("../../../../types/cosmos/staking/v1beta1").UnbondingDelegation[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegationRequest": {
        aminoType: string;
        toAmino: (message: QueryDelegationRequest) => {
            delegator_addr: string;
            validator_addr: string;
        };
        fromAmino: (object: QueryDelegationRequest) => {
            delegator_addr: string;
            validator_addr: string;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegationResponse": {
        aminoType: string;
        toAmino: (message: QueryDelegationResponse) => {
            delegation_response?: import("../../../../types/cosmos/staking/v1beta1").DelegationResponse;
        };
        fromAmino: (object: QueryDelegationResponse) => {
            delegation_response?: import("../../../../types/cosmos/staking/v1beta1").DelegationResponse;
        };
    };
    "/cosmos.staking.v1beta1.QueryUnbondingDelegationRequest": {
        aminoType: string;
        toAmino: (message: QueryUnbondingDelegationRequest) => {
            delegator_addr: string;
            validator_addr: string;
        };
        fromAmino: (object: QueryUnbondingDelegationRequest) => {
            delegator_addr: string;
            validator_addr: string;
        };
    };
    "/cosmos.staking.v1beta1.QueryUnbondingDelegationResponse": {
        aminoType: string;
        toAmino: (message: QueryUnbondingDelegationResponse) => {
            unbond?: import("../../../../types/cosmos/staking/v1beta1").UnbondingDelegation;
        };
        fromAmino: (object: QueryUnbondingDelegationResponse) => {
            unbond?: import("../../../../types/cosmos/staking/v1beta1").UnbondingDelegation;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest": {
        aminoType: string;
        toAmino: (message: QueryDelegatorDelegationsRequest) => {
            delegator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
        fromAmino: (object: QueryDelegatorDelegationsRequest) => {
            delegator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse": {
        aminoType: string;
        toAmino: (message: QueryDelegatorDelegationsResponse) => {
            delegation_responses: import("../../../../types/cosmos/staking/v1beta1").DelegationResponse[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
        fromAmino: (object: QueryDelegatorDelegationsResponse) => {
            delegation_responses: import("../../../../types/cosmos/staking/v1beta1").DelegationResponse[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest": {
        aminoType: string;
        toAmino: (message: QueryDelegatorUnbondingDelegationsRequest) => {
            delegator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
        fromAmino: (object: QueryDelegatorUnbondingDelegationsRequest) => {
            delegator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse": {
        aminoType: string;
        toAmino: (message: QueryDelegatorUnbondingDelegationsResponse) => {
            unbonding_responses: import("../../../../types/cosmos/staking/v1beta1").UnbondingDelegation[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
        fromAmino: (object: QueryDelegatorUnbondingDelegationsResponse) => {
            unbonding_responses: import("../../../../types/cosmos/staking/v1beta1").UnbondingDelegation[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
    };
    "/cosmos.staking.v1beta1.QueryRedelegationsRequest": {
        aminoType: string;
        toAmino: (message: QueryRedelegationsRequest) => {
            delegator_addr: string;
            src_validator_addr: string;
            dst_validator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
        fromAmino: (object: QueryRedelegationsRequest) => {
            delegator_addr: string;
            src_validator_addr: string;
            dst_validator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
    };
    "/cosmos.staking.v1beta1.QueryRedelegationsResponse": {
        aminoType: string;
        toAmino: (message: QueryRedelegationsResponse) => {
            redelegation_responses: import("../../../../types/cosmos/staking/v1beta1").RedelegationResponse[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
        fromAmino: (object: QueryRedelegationsResponse) => {
            redelegation_responses: import("../../../../types/cosmos/staking/v1beta1").RedelegationResponse[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest": {
        aminoType: string;
        toAmino: (message: QueryDelegatorValidatorsRequest) => {
            delegator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
        fromAmino: (object: QueryDelegatorValidatorsRequest) => {
            delegator_addr: string;
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageRequest;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse": {
        aminoType: string;
        toAmino: (message: QueryDelegatorValidatorsResponse) => {
            validators: import("../../../../types/cosmos/staking/v1beta1").Validator[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
        fromAmino: (object: QueryDelegatorValidatorsResponse) => {
            validators: import("../../../../types/cosmos/staking/v1beta1").Validator[];
            pagination?: import("../../../../types/cosmos/base/query/v1beta1").PageResponse;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegatorValidatorRequest": {
        aminoType: string;
        toAmino: (message: QueryDelegatorValidatorRequest) => {
            delegator_addr: string;
            validator_addr: string;
        };
        fromAmino: (object: QueryDelegatorValidatorRequest) => {
            delegator_addr: string;
            validator_addr: string;
        };
    };
    "/cosmos.staking.v1beta1.QueryDelegatorValidatorResponse": {
        aminoType: string;
        toAmino: (message: QueryDelegatorValidatorResponse) => {
            validator?: import("../../../../types/cosmos/staking/v1beta1").Validator;
        };
        fromAmino: (object: QueryDelegatorValidatorResponse) => {
            validator?: import("../../../../types/cosmos/staking/v1beta1").Validator;
        };
    };
    "/cosmos.staking.v1beta1.QueryHistoricalInfoRequest": {
        aminoType: string;
        toAmino: (message: QueryHistoricalInfoRequest) => {
            height: number;
        };
        fromAmino: (object: QueryHistoricalInfoRequest) => {
            height: number;
        };
    };
    "/cosmos.staking.v1beta1.QueryHistoricalInfoResponse": {
        aminoType: string;
        toAmino: (message: QueryHistoricalInfoResponse) => {
            hist?: import("../../../../types/cosmos/staking/v1beta1").HistoricalInfo;
        };
        fromAmino: (object: QueryHistoricalInfoResponse) => {
            hist?: import("../../../../types/cosmos/staking/v1beta1").HistoricalInfo;
        };
    };
    "/cosmos.staking.v1beta1.QueryPoolRequest": {
        aminoType: string;
        toAmino: (message: QueryPoolRequest) => {};
        fromAmino: (object: QueryPoolRequest) => {};
    };
    "/cosmos.staking.v1beta1.QueryPoolResponse": {
        aminoType: string;
        toAmino: (message: QueryPoolResponse) => {
            pool?: import("../../../../types/cosmos/staking/v1beta1").Pool;
        };
        fromAmino: (object: QueryPoolResponse) => {
            pool?: import("../../../../types/cosmos/staking/v1beta1").Pool;
        };
    };
    "/cosmos.staking.v1beta1.QueryParamsRequest": {
        aminoType: string;
        toAmino: (message: QueryParamsRequest) => {};
        fromAmino: (object: QueryParamsRequest) => {};
    };
    "/cosmos.staking.v1beta1.QueryParamsResponse": {
        aminoType: string;
        toAmino: (message: QueryParamsResponse) => {
            params?: import("../../../../types/cosmos/staking/v1beta1").Params;
        };
        fromAmino: (object: QueryParamsResponse) => {
            params?: import("../../../../types/cosmos/staking/v1beta1").Params;
        };
    };
};
