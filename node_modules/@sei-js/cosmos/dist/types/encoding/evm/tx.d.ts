import type { GeneratedType } from "@cosmjs/proto-signing";
import type { MsgAssociateContractAddressResponse as MsgAssociateContractAddressResponse_type, MsgAssociateContractAddress as MsgAssociateContractAddress_type, MsgAssociateResponse as MsgAssociateResponse_type, MsgAssociate as MsgAssociate_type, MsgEVMTransactionResponse as MsgEVMTransactionResponse_type, MsgEVMTransaction as MsgEVMTransaction_type, MsgInternalEVMCallResponse as MsgInternalEVMCallResponse_type, MsgInternalEVMCall as MsgInternalEVMCall_type, MsgInternalEVMDelegateCallResponse as MsgInternalEVMDelegateCallResponse_type, MsgInternalEVMDelegateCall as MsgInternalEVMDelegateCall_type, MsgRegisterPointerResponse as MsgRegisterPointerResponse_type, MsgRegisterPointer as MsgRegisterPointer_type, MsgSendResponse as MsgSendResponse_type, MsgSend as MsgSend_type } from "../../types/evm";
import type { MessageFns } from "../common";
export interface MsgEVMTransaction extends MsgEVMTransaction_type {
}
export interface MsgEVMTransactionResponse extends MsgEVMTransactionResponse_type {
}
export interface MsgInternalEVMCall extends MsgInternalEVMCall_type {
}
export interface MsgInternalEVMCallResponse extends MsgInternalEVMCallResponse_type {
}
export interface MsgInternalEVMDelegateCall extends MsgInternalEVMDelegateCall_type {
}
export interface MsgInternalEVMDelegateCallResponse extends MsgInternalEVMDelegateCallResponse_type {
}
export interface MsgSend extends MsgSend_type {
}
export interface MsgSendResponse extends MsgSendResponse_type {
}
export interface MsgRegisterPointer extends MsgRegisterPointer_type {
}
export interface MsgRegisterPointerResponse extends MsgRegisterPointerResponse_type {
}
export interface MsgAssociateContractAddress extends MsgAssociateContractAddress_type {
}
export interface MsgAssociateContractAddressResponse extends MsgAssociateContractAddressResponse_type {
}
export interface MsgAssociate extends MsgAssociate_type {
}
export interface MsgAssociateResponse extends MsgAssociateResponse_type {
}
export declare const MsgEVMTransaction: MessageFns<MsgEVMTransaction, "seiprotocol.seichain.evm.MsgEVMTransaction">;
export declare const MsgEVMTransactionResponse: MessageFns<MsgEVMTransactionResponse, "seiprotocol.seichain.evm.MsgEVMTransactionResponse">;
export declare const MsgInternalEVMCall: MessageFns<MsgInternalEVMCall, "seiprotocol.seichain.evm.MsgInternalEVMCall">;
export declare const MsgInternalEVMCallResponse: MessageFns<MsgInternalEVMCallResponse, "seiprotocol.seichain.evm.MsgInternalEVMCallResponse">;
export declare const MsgInternalEVMDelegateCall: MessageFns<MsgInternalEVMDelegateCall, "seiprotocol.seichain.evm.MsgInternalEVMDelegateCall">;
export declare const MsgInternalEVMDelegateCallResponse: MessageFns<MsgInternalEVMDelegateCallResponse, "seiprotocol.seichain.evm.MsgInternalEVMDelegateCallResponse">;
export declare const MsgSend: MessageFns<MsgSend, "seiprotocol.seichain.evm.MsgSend">;
export declare const MsgSendResponse: MessageFns<MsgSendResponse, "seiprotocol.seichain.evm.MsgSendResponse">;
export declare const MsgRegisterPointer: MessageFns<MsgRegisterPointer, "seiprotocol.seichain.evm.MsgRegisterPointer">;
export declare const MsgRegisterPointerResponse: MessageFns<MsgRegisterPointerResponse, "seiprotocol.seichain.evm.MsgRegisterPointerResponse">;
export declare const MsgAssociateContractAddress: MessageFns<MsgAssociateContractAddress, "seiprotocol.seichain.evm.MsgAssociateContractAddress">;
export declare const MsgAssociateContractAddressResponse: MessageFns<MsgAssociateContractAddressResponse, "seiprotocol.seichain.evm.MsgAssociateContractAddressResponse">;
export declare const MsgAssociate: MessageFns<MsgAssociate, "seiprotocol.seichain.evm.MsgAssociate">;
export declare const MsgAssociateResponse: MessageFns<MsgAssociateResponse, "seiprotocol.seichain.evm.MsgAssociateResponse">;
export declare const registry: Array<[string, GeneratedType]>;
export declare const aminoConverters: {
    "/seiprotocol.seichain.evm.MsgEVMTransaction": {
        aminoType: string;
        toAmino: (message: MsgEVMTransaction) => {
            data?: import("../../types/google/protobuf").Any;
            derived: Uint8Array;
        };
        fromAmino: (object: MsgEVMTransaction) => {
            data?: import("../../types/google/protobuf").Any;
            derived: Uint8Array;
        };
    };
    "/seiprotocol.seichain.evm.MsgEVMTransactionResponse": {
        aminoType: string;
        toAmino: (message: MsgEVMTransactionResponse) => {
            gas_used: number;
            vm_error: string;
            return_data: Uint8Array;
            hash: string;
            logs: import("../../types/evm").Log[];
        };
        fromAmino: (object: MsgEVMTransactionResponse) => {
            gas_used: number;
            vm_error: string;
            return_data: Uint8Array;
            hash: string;
            logs: import("../../types/evm").Log[];
        };
    };
    "/seiprotocol.seichain.evm.MsgInternalEVMCall": {
        aminoType: string;
        toAmino: (message: MsgInternalEVMCall) => {
            sender: string;
            value: string;
            to: string;
            data: Uint8Array;
        };
        fromAmino: (object: MsgInternalEVMCall) => {
            sender: string;
            value: string;
            to: string;
            data: Uint8Array;
        };
    };
    "/seiprotocol.seichain.evm.MsgInternalEVMCallResponse": {
        aminoType: string;
        toAmino: (message: MsgInternalEVMCallResponse) => {};
        fromAmino: (object: MsgInternalEVMCallResponse) => {};
    };
    "/seiprotocol.seichain.evm.MsgInternalEVMDelegateCall": {
        aminoType: string;
        toAmino: (message: MsgInternalEVMDelegateCall) => {
            sender: string;
            codeHash: Uint8Array;
            to: string;
            data: Uint8Array;
            fromContract: string;
        };
        fromAmino: (object: MsgInternalEVMDelegateCall) => {
            sender: string;
            codeHash: Uint8Array;
            to: string;
            data: Uint8Array;
            fromContract: string;
        };
    };
    "/seiprotocol.seichain.evm.MsgInternalEVMDelegateCallResponse": {
        aminoType: string;
        toAmino: (message: MsgInternalEVMDelegateCallResponse) => {};
        fromAmino: (object: MsgInternalEVMDelegateCallResponse) => {};
    };
    "/seiprotocol.seichain.evm.MsgSend": {
        aminoType: string;
        toAmino: (message: MsgSend) => {
            from_address: string;
            to_address: string;
            amount: import("../../types/cosmos/base/v1beta1").Coin[];
        };
        fromAmino: (object: MsgSend) => {
            from_address: string;
            to_address: string;
            amount: import("../../types/cosmos/base/v1beta1").Coin[];
        };
    };
    "/seiprotocol.seichain.evm.MsgSendResponse": {
        aminoType: string;
        toAmino: (message: MsgSendResponse) => {};
        fromAmino: (object: MsgSendResponse) => {};
    };
    "/seiprotocol.seichain.evm.MsgRegisterPointer": {
        aminoType: string;
        toAmino: (message: MsgRegisterPointer) => {
            sender: string;
            pointer_type: import("../../types/evm").PointerType;
            erc_address: string;
        };
        fromAmino: (object: MsgRegisterPointer) => {
            sender: string;
            pointer_type: import("../../types/evm").PointerType;
            erc_address: string;
        };
    };
    "/seiprotocol.seichain.evm.MsgRegisterPointerResponse": {
        aminoType: string;
        toAmino: (message: MsgRegisterPointerResponse) => {
            pointer_address: string;
        };
        fromAmino: (object: MsgRegisterPointerResponse) => {
            pointer_address: string;
        };
    };
    "/seiprotocol.seichain.evm.MsgAssociateContractAddress": {
        aminoType: string;
        toAmino: (message: MsgAssociateContractAddress) => {
            sender: string;
            address: string;
        };
        fromAmino: (object: MsgAssociateContractAddress) => {
            sender: string;
            address: string;
        };
    };
    "/seiprotocol.seichain.evm.MsgAssociateContractAddressResponse": {
        aminoType: string;
        toAmino: (message: MsgAssociateContractAddressResponse) => {};
        fromAmino: (object: MsgAssociateContractAddressResponse) => {};
    };
    "/seiprotocol.seichain.evm.MsgAssociate": {
        aminoType: string;
        toAmino: (message: MsgAssociate) => {
            sender: string;
            custom_message: string;
        };
        fromAmino: (object: MsgAssociate) => {
            sender: string;
            custom_message: string;
        };
    };
    "/seiprotocol.seichain.evm.MsgAssociateResponse": {
        aminoType: string;
        toAmino: (message: MsgAssociateResponse) => {};
        fromAmino: (object: MsgAssociateResponse) => {};
    };
};
