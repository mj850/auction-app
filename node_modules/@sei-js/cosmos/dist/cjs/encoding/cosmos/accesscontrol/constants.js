"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.accessTypeFromJSON = accessTypeFromJSON;
exports.accessTypeToJSON = accessTypeToJSON;
exports.accessOperationSelectorTypeFromJSON = accessOperationSelectorTypeFromJSON;
exports.accessOperationSelectorTypeToJSON = accessOperationSelectorTypeToJSON;
exports.resourceTypeFromJSON = resourceTypeFromJSON;
exports.resourceTypeToJSON = resourceTypeToJSON;
exports.wasmMessageSubtypeFromJSON = wasmMessageSubtypeFromJSON;
exports.wasmMessageSubtypeToJSON = wasmMessageSubtypeToJSON;
const accesscontrol_1 = require("../../../types/cosmos/accesscontrol");
function accessTypeFromJSON(object) {
    switch (object) {
        case 0:
        case "UNKNOWN":
            return accesscontrol_1.AccessType.UNKNOWN;
        case 1:
        case "READ":
            return accesscontrol_1.AccessType.READ;
        case 2:
        case "WRITE":
            return accesscontrol_1.AccessType.WRITE;
        case 3:
        case "COMMIT":
            return accesscontrol_1.AccessType.COMMIT;
        case -1:
        case "UNRECOGNIZED":
        default:
            return accesscontrol_1.AccessType.UNRECOGNIZED;
    }
}
function accessTypeToJSON(object) {
    switch (object) {
        case accesscontrol_1.AccessType.UNKNOWN:
            return "UNKNOWN";
        case accesscontrol_1.AccessType.READ:
            return "READ";
        case accesscontrol_1.AccessType.WRITE:
            return "WRITE";
        case accesscontrol_1.AccessType.COMMIT:
            return "COMMIT";
        case accesscontrol_1.AccessType.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
function accessOperationSelectorTypeFromJSON(object) {
    switch (object) {
        case 0:
        case "NONE":
            return accesscontrol_1.AccessOperationSelectorType.NONE;
        case 1:
        case "JQ":
            return accesscontrol_1.AccessOperationSelectorType.JQ;
        case 2:
        case "JQ_BECH32_ADDRESS":
            return accesscontrol_1.AccessOperationSelectorType.JQ_BECH32_ADDRESS;
        case 3:
        case "JQ_LENGTH_PREFIXED_ADDRESS":
            return accesscontrol_1.AccessOperationSelectorType.JQ_LENGTH_PREFIXED_ADDRESS;
        case 4:
        case "SENDER_BECH32_ADDRESS":
            return accesscontrol_1.AccessOperationSelectorType.SENDER_BECH32_ADDRESS;
        case 5:
        case "SENDER_LENGTH_PREFIXED_ADDRESS":
            return accesscontrol_1.AccessOperationSelectorType.SENDER_LENGTH_PREFIXED_ADDRESS;
        case 6:
        case "CONTRACT_ADDRESS":
            return accesscontrol_1.AccessOperationSelectorType.CONTRACT_ADDRESS;
        case 7:
        case "JQ_MESSAGE_CONDITIONAL":
            return accesscontrol_1.AccessOperationSelectorType.JQ_MESSAGE_CONDITIONAL;
        case 8:
        case "CONSTANT_STRING_TO_HEX":
            return accesscontrol_1.AccessOperationSelectorType.CONSTANT_STRING_TO_HEX;
        case 9:
        case "CONTRACT_REFERENCE":
            return accesscontrol_1.AccessOperationSelectorType.CONTRACT_REFERENCE;
        case -1:
        case "UNRECOGNIZED":
        default:
            return accesscontrol_1.AccessOperationSelectorType.UNRECOGNIZED;
    }
}
function accessOperationSelectorTypeToJSON(object) {
    switch (object) {
        case accesscontrol_1.AccessOperationSelectorType.NONE:
            return "NONE";
        case accesscontrol_1.AccessOperationSelectorType.JQ:
            return "JQ";
        case accesscontrol_1.AccessOperationSelectorType.JQ_BECH32_ADDRESS:
            return "JQ_BECH32_ADDRESS";
        case accesscontrol_1.AccessOperationSelectorType.JQ_LENGTH_PREFIXED_ADDRESS:
            return "JQ_LENGTH_PREFIXED_ADDRESS";
        case accesscontrol_1.AccessOperationSelectorType.SENDER_BECH32_ADDRESS:
            return "SENDER_BECH32_ADDRESS";
        case accesscontrol_1.AccessOperationSelectorType.SENDER_LENGTH_PREFIXED_ADDRESS:
            return "SENDER_LENGTH_PREFIXED_ADDRESS";
        case accesscontrol_1.AccessOperationSelectorType.CONTRACT_ADDRESS:
            return "CONTRACT_ADDRESS";
        case accesscontrol_1.AccessOperationSelectorType.JQ_MESSAGE_CONDITIONAL:
            return "JQ_MESSAGE_CONDITIONAL";
        case accesscontrol_1.AccessOperationSelectorType.CONSTANT_STRING_TO_HEX:
            return "CONSTANT_STRING_TO_HEX";
        case accesscontrol_1.AccessOperationSelectorType.CONTRACT_REFERENCE:
            return "CONTRACT_REFERENCE";
        case accesscontrol_1.AccessOperationSelectorType.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
function resourceTypeFromJSON(object) {
    switch (object) {
        case 0:
        case "ANY":
            return accesscontrol_1.ResourceType.ANY;
        case 1:
        case "KV":
            return accesscontrol_1.ResourceType.KV;
        case 2:
        case "Mem":
            return accesscontrol_1.ResourceType.Mem;
        case 4:
        case "KV_BANK":
            return accesscontrol_1.ResourceType.KV_BANK;
        case 5:
        case "KV_STAKING":
            return accesscontrol_1.ResourceType.KV_STAKING;
        case 6:
        case "KV_WASM":
            return accesscontrol_1.ResourceType.KV_WASM;
        case 7:
        case "KV_ORACLE":
            return accesscontrol_1.ResourceType.KV_ORACLE;
        case 9:
        case "KV_EPOCH":
            return accesscontrol_1.ResourceType.KV_EPOCH;
        case 10:
        case "KV_TOKENFACTORY":
            return accesscontrol_1.ResourceType.KV_TOKENFACTORY;
        case 11:
        case "KV_ORACLE_VOTE_TARGETS":
            return accesscontrol_1.ResourceType.KV_ORACLE_VOTE_TARGETS;
        case 12:
        case "KV_ORACLE_AGGREGATE_VOTES":
            return accesscontrol_1.ResourceType.KV_ORACLE_AGGREGATE_VOTES;
        case 13:
        case "KV_ORACLE_FEEDERS":
            return accesscontrol_1.ResourceType.KV_ORACLE_FEEDERS;
        case 14:
        case "KV_STAKING_DELEGATION":
            return accesscontrol_1.ResourceType.KV_STAKING_DELEGATION;
        case 15:
        case "KV_STAKING_VALIDATOR":
            return accesscontrol_1.ResourceType.KV_STAKING_VALIDATOR;
        case 16:
        case "KV_AUTH":
            return accesscontrol_1.ResourceType.KV_AUTH;
        case 17:
        case "KV_AUTH_ADDRESS_STORE":
            return accesscontrol_1.ResourceType.KV_AUTH_ADDRESS_STORE;
        case 18:
        case "KV_BANK_SUPPLY":
            return accesscontrol_1.ResourceType.KV_BANK_SUPPLY;
        case 19:
        case "KV_BANK_DENOM":
            return accesscontrol_1.ResourceType.KV_BANK_DENOM;
        case 20:
        case "KV_BANK_BALANCES":
            return accesscontrol_1.ResourceType.KV_BANK_BALANCES;
        case 21:
        case "KV_TOKENFACTORY_DENOM":
            return accesscontrol_1.ResourceType.KV_TOKENFACTORY_DENOM;
        case 22:
        case "KV_TOKENFACTORY_METADATA":
            return accesscontrol_1.ResourceType.KV_TOKENFACTORY_METADATA;
        case 23:
        case "KV_TOKENFACTORY_ADMIN":
            return accesscontrol_1.ResourceType.KV_TOKENFACTORY_ADMIN;
        case 24:
        case "KV_TOKENFACTORY_CREATOR":
            return accesscontrol_1.ResourceType.KV_TOKENFACTORY_CREATOR;
        case 25:
        case "KV_ORACLE_EXCHANGE_RATE":
            return accesscontrol_1.ResourceType.KV_ORACLE_EXCHANGE_RATE;
        case 26:
        case "KV_ORACLE_VOTE_PENALTY_COUNTER":
            return accesscontrol_1.ResourceType.KV_ORACLE_VOTE_PENALTY_COUNTER;
        case 27:
        case "KV_ORACLE_PRICE_SNAPSHOT":
            return accesscontrol_1.ResourceType.KV_ORACLE_PRICE_SNAPSHOT;
        case 28:
        case "KV_STAKING_VALIDATION_POWER":
            return accesscontrol_1.ResourceType.KV_STAKING_VALIDATION_POWER;
        case 29:
        case "KV_STAKING_TOTAL_POWER":
            return accesscontrol_1.ResourceType.KV_STAKING_TOTAL_POWER;
        case 30:
        case "KV_STAKING_VALIDATORS_CON_ADDR":
            return accesscontrol_1.ResourceType.KV_STAKING_VALIDATORS_CON_ADDR;
        case 31:
        case "KV_STAKING_UNBONDING_DELEGATION":
            return accesscontrol_1.ResourceType.KV_STAKING_UNBONDING_DELEGATION;
        case 32:
        case "KV_STAKING_UNBONDING_DELEGATION_VAL":
            return accesscontrol_1.ResourceType.KV_STAKING_UNBONDING_DELEGATION_VAL;
        case 33:
        case "KV_STAKING_REDELEGATION":
            return accesscontrol_1.ResourceType.KV_STAKING_REDELEGATION;
        case 34:
        case "KV_STAKING_REDELEGATION_VAL_SRC":
            return accesscontrol_1.ResourceType.KV_STAKING_REDELEGATION_VAL_SRC;
        case 35:
        case "KV_STAKING_REDELEGATION_VAL_DST":
            return accesscontrol_1.ResourceType.KV_STAKING_REDELEGATION_VAL_DST;
        case 36:
        case "KV_STAKING_REDELEGATION_QUEUE":
            return accesscontrol_1.ResourceType.KV_STAKING_REDELEGATION_QUEUE;
        case 37:
        case "KV_STAKING_VALIDATOR_QUEUE":
            return accesscontrol_1.ResourceType.KV_STAKING_VALIDATOR_QUEUE;
        case 38:
        case "KV_STAKING_HISTORICAL_INFO":
            return accesscontrol_1.ResourceType.KV_STAKING_HISTORICAL_INFO;
        case 39:
        case "KV_STAKING_UNBONDING":
            return accesscontrol_1.ResourceType.KV_STAKING_UNBONDING;
        case 41:
        case "KV_STAKING_VALIDATORS_BY_POWER":
            return accesscontrol_1.ResourceType.KV_STAKING_VALIDATORS_BY_POWER;
        case 40:
        case "KV_DISTRIBUTION":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION;
        case 42:
        case "KV_DISTRIBUTION_FEE_POOL":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION_FEE_POOL;
        case 43:
        case "KV_DISTRIBUTION_PROPOSER_KEY":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION_PROPOSER_KEY;
        case 44:
        case "KV_DISTRIBUTION_OUTSTANDING_REWARDS":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION_OUTSTANDING_REWARDS;
        case 45:
        case "KV_DISTRIBUTION_DELEGATOR_WITHDRAW_ADDR":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION_DELEGATOR_WITHDRAW_ADDR;
        case 46:
        case "KV_DISTRIBUTION_DELEGATOR_STARTING_INFO":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION_DELEGATOR_STARTING_INFO;
        case 47:
        case "KV_DISTRIBUTION_VAL_HISTORICAL_REWARDS":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION_VAL_HISTORICAL_REWARDS;
        case 48:
        case "KV_DISTRIBUTION_VAL_CURRENT_REWARDS":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION_VAL_CURRENT_REWARDS;
        case 49:
        case "KV_DISTRIBUTION_VAL_ACCUM_COMMISSION":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION_VAL_ACCUM_COMMISSION;
        case 50:
        case "KV_DISTRIBUTION_SLASH_EVENT":
            return accesscontrol_1.ResourceType.KV_DISTRIBUTION_SLASH_EVENT;
        case 71:
        case "KV_ACCESSCONTROL":
            return accesscontrol_1.ResourceType.KV_ACCESSCONTROL;
        case 72:
        case "KV_ACCESSCONTROL_WASM_DEPENDENCY_MAPPING":
            return accesscontrol_1.ResourceType.KV_ACCESSCONTROL_WASM_DEPENDENCY_MAPPING;
        case 73:
        case "KV_WASM_CODE":
            return accesscontrol_1.ResourceType.KV_WASM_CODE;
        case 74:
        case "KV_WASM_CONTRACT_ADDRESS":
            return accesscontrol_1.ResourceType.KV_WASM_CONTRACT_ADDRESS;
        case 75:
        case "KV_WASM_CONTRACT_STORE":
            return accesscontrol_1.ResourceType.KV_WASM_CONTRACT_STORE;
        case 76:
        case "KV_WASM_SEQUENCE_KEY":
            return accesscontrol_1.ResourceType.KV_WASM_SEQUENCE_KEY;
        case 77:
        case "KV_WASM_CONTRACT_CODE_HISTORY":
            return accesscontrol_1.ResourceType.KV_WASM_CONTRACT_CODE_HISTORY;
        case 78:
        case "KV_WASM_CONTRACT_BY_CODE_ID":
            return accesscontrol_1.ResourceType.KV_WASM_CONTRACT_BY_CODE_ID;
        case 79:
        case "KV_WASM_PINNED_CODE_INDEX":
            return accesscontrol_1.ResourceType.KV_WASM_PINNED_CODE_INDEX;
        case 80:
        case "KV_AUTH_GLOBAL_ACCOUNT_NUMBER":
            return accesscontrol_1.ResourceType.KV_AUTH_GLOBAL_ACCOUNT_NUMBER;
        case 81:
        case "KV_AUTHZ":
            return accesscontrol_1.ResourceType.KV_AUTHZ;
        case 82:
        case "KV_FEEGRANT":
            return accesscontrol_1.ResourceType.KV_FEEGRANT;
        case 83:
        case "KV_FEEGRANT_ALLOWANCE":
            return accesscontrol_1.ResourceType.KV_FEEGRANT_ALLOWANCE;
        case 84:
        case "KV_SLASHING":
            return accesscontrol_1.ResourceType.KV_SLASHING;
        case 85:
        case "KV_SLASHING_VAL_SIGNING_INFO":
            return accesscontrol_1.ResourceType.KV_SLASHING_VAL_SIGNING_INFO;
        case 86:
        case "KV_SLASHING_ADDR_PUBKEY_RELATION_KEY":
            return accesscontrol_1.ResourceType.KV_SLASHING_ADDR_PUBKEY_RELATION_KEY;
        case 93:
        case "KV_BANK_DEFERRED":
            return accesscontrol_1.ResourceType.KV_BANK_DEFERRED;
        case 95:
        case "KV_BANK_DEFERRED_MODULE_TX_INDEX":
            return accesscontrol_1.ResourceType.KV_BANK_DEFERRED_MODULE_TX_INDEX;
        case 96:
        case "KV_EVM":
            return accesscontrol_1.ResourceType.KV_EVM;
        case 97:
        case "KV_EVM_BALANCE":
            return accesscontrol_1.ResourceType.KV_EVM_BALANCE;
        case 98:
        case "KV_EVM_TRANSIENT":
            return accesscontrol_1.ResourceType.KV_EVM_TRANSIENT;
        case 99:
        case "KV_EVM_ACCOUNT_TRANSIENT":
            return accesscontrol_1.ResourceType.KV_EVM_ACCOUNT_TRANSIENT;
        case 100:
        case "KV_EVM_MODULE_TRANSIENT":
            return accesscontrol_1.ResourceType.KV_EVM_MODULE_TRANSIENT;
        case 101:
        case "KV_EVM_NONCE":
            return accesscontrol_1.ResourceType.KV_EVM_NONCE;
        case 102:
        case "KV_EVM_RECEIPT":
            return accesscontrol_1.ResourceType.KV_EVM_RECEIPT;
        case 103:
        case "KV_EVM_S2E":
            return accesscontrol_1.ResourceType.KV_EVM_S2E;
        case 104:
        case "KV_EVM_E2S":
            return accesscontrol_1.ResourceType.KV_EVM_E2S;
        case 105:
        case "KV_EVM_CODE_HASH":
            return accesscontrol_1.ResourceType.KV_EVM_CODE_HASH;
        case 106:
        case "KV_EVM_CODE":
            return accesscontrol_1.ResourceType.KV_EVM_CODE;
        case 107:
        case "KV_EVM_CODE_SIZE":
            return accesscontrol_1.ResourceType.KV_EVM_CODE_SIZE;
        case 108:
        case "KV_BANK_WEI_BALANCE":
            return accesscontrol_1.ResourceType.KV_BANK_WEI_BALANCE;
        case 111:
        case "KV_CT":
            return accesscontrol_1.ResourceType.KV_CT;
        case 112:
        case "KV_CT_ACCOUNT":
            return accesscontrol_1.ResourceType.KV_CT_ACCOUNT;
        case -1:
        case "UNRECOGNIZED":
        default:
            return accesscontrol_1.ResourceType.UNRECOGNIZED;
    }
}
function resourceTypeToJSON(object) {
    switch (object) {
        case accesscontrol_1.ResourceType.ANY:
            return "ANY";
        case accesscontrol_1.ResourceType.KV:
            return "KV";
        case accesscontrol_1.ResourceType.Mem:
            return "Mem";
        case accesscontrol_1.ResourceType.KV_BANK:
            return "KV_BANK";
        case accesscontrol_1.ResourceType.KV_STAKING:
            return "KV_STAKING";
        case accesscontrol_1.ResourceType.KV_WASM:
            return "KV_WASM";
        case accesscontrol_1.ResourceType.KV_ORACLE:
            return "KV_ORACLE";
        case accesscontrol_1.ResourceType.KV_EPOCH:
            return "KV_EPOCH";
        case accesscontrol_1.ResourceType.KV_TOKENFACTORY:
            return "KV_TOKENFACTORY";
        case accesscontrol_1.ResourceType.KV_ORACLE_VOTE_TARGETS:
            return "KV_ORACLE_VOTE_TARGETS";
        case accesscontrol_1.ResourceType.KV_ORACLE_AGGREGATE_VOTES:
            return "KV_ORACLE_AGGREGATE_VOTES";
        case accesscontrol_1.ResourceType.KV_ORACLE_FEEDERS:
            return "KV_ORACLE_FEEDERS";
        case accesscontrol_1.ResourceType.KV_STAKING_DELEGATION:
            return "KV_STAKING_DELEGATION";
        case accesscontrol_1.ResourceType.KV_STAKING_VALIDATOR:
            return "KV_STAKING_VALIDATOR";
        case accesscontrol_1.ResourceType.KV_AUTH:
            return "KV_AUTH";
        case accesscontrol_1.ResourceType.KV_AUTH_ADDRESS_STORE:
            return "KV_AUTH_ADDRESS_STORE";
        case accesscontrol_1.ResourceType.KV_BANK_SUPPLY:
            return "KV_BANK_SUPPLY";
        case accesscontrol_1.ResourceType.KV_BANK_DENOM:
            return "KV_BANK_DENOM";
        case accesscontrol_1.ResourceType.KV_BANK_BALANCES:
            return "KV_BANK_BALANCES";
        case accesscontrol_1.ResourceType.KV_TOKENFACTORY_DENOM:
            return "KV_TOKENFACTORY_DENOM";
        case accesscontrol_1.ResourceType.KV_TOKENFACTORY_METADATA:
            return "KV_TOKENFACTORY_METADATA";
        case accesscontrol_1.ResourceType.KV_TOKENFACTORY_ADMIN:
            return "KV_TOKENFACTORY_ADMIN";
        case accesscontrol_1.ResourceType.KV_TOKENFACTORY_CREATOR:
            return "KV_TOKENFACTORY_CREATOR";
        case accesscontrol_1.ResourceType.KV_ORACLE_EXCHANGE_RATE:
            return "KV_ORACLE_EXCHANGE_RATE";
        case accesscontrol_1.ResourceType.KV_ORACLE_VOTE_PENALTY_COUNTER:
            return "KV_ORACLE_VOTE_PENALTY_COUNTER";
        case accesscontrol_1.ResourceType.KV_ORACLE_PRICE_SNAPSHOT:
            return "KV_ORACLE_PRICE_SNAPSHOT";
        case accesscontrol_1.ResourceType.KV_STAKING_VALIDATION_POWER:
            return "KV_STAKING_VALIDATION_POWER";
        case accesscontrol_1.ResourceType.KV_STAKING_TOTAL_POWER:
            return "KV_STAKING_TOTAL_POWER";
        case accesscontrol_1.ResourceType.KV_STAKING_VALIDATORS_CON_ADDR:
            return "KV_STAKING_VALIDATORS_CON_ADDR";
        case accesscontrol_1.ResourceType.KV_STAKING_UNBONDING_DELEGATION:
            return "KV_STAKING_UNBONDING_DELEGATION";
        case accesscontrol_1.ResourceType.KV_STAKING_UNBONDING_DELEGATION_VAL:
            return "KV_STAKING_UNBONDING_DELEGATION_VAL";
        case accesscontrol_1.ResourceType.KV_STAKING_REDELEGATION:
            return "KV_STAKING_REDELEGATION";
        case accesscontrol_1.ResourceType.KV_STAKING_REDELEGATION_VAL_SRC:
            return "KV_STAKING_REDELEGATION_VAL_SRC";
        case accesscontrol_1.ResourceType.KV_STAKING_REDELEGATION_VAL_DST:
            return "KV_STAKING_REDELEGATION_VAL_DST";
        case accesscontrol_1.ResourceType.KV_STAKING_REDELEGATION_QUEUE:
            return "KV_STAKING_REDELEGATION_QUEUE";
        case accesscontrol_1.ResourceType.KV_STAKING_VALIDATOR_QUEUE:
            return "KV_STAKING_VALIDATOR_QUEUE";
        case accesscontrol_1.ResourceType.KV_STAKING_HISTORICAL_INFO:
            return "KV_STAKING_HISTORICAL_INFO";
        case accesscontrol_1.ResourceType.KV_STAKING_UNBONDING:
            return "KV_STAKING_UNBONDING";
        case accesscontrol_1.ResourceType.KV_STAKING_VALIDATORS_BY_POWER:
            return "KV_STAKING_VALIDATORS_BY_POWER";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION:
            return "KV_DISTRIBUTION";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION_FEE_POOL:
            return "KV_DISTRIBUTION_FEE_POOL";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION_PROPOSER_KEY:
            return "KV_DISTRIBUTION_PROPOSER_KEY";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION_OUTSTANDING_REWARDS:
            return "KV_DISTRIBUTION_OUTSTANDING_REWARDS";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION_DELEGATOR_WITHDRAW_ADDR:
            return "KV_DISTRIBUTION_DELEGATOR_WITHDRAW_ADDR";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION_DELEGATOR_STARTING_INFO:
            return "KV_DISTRIBUTION_DELEGATOR_STARTING_INFO";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION_VAL_HISTORICAL_REWARDS:
            return "KV_DISTRIBUTION_VAL_HISTORICAL_REWARDS";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION_VAL_CURRENT_REWARDS:
            return "KV_DISTRIBUTION_VAL_CURRENT_REWARDS";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION_VAL_ACCUM_COMMISSION:
            return "KV_DISTRIBUTION_VAL_ACCUM_COMMISSION";
        case accesscontrol_1.ResourceType.KV_DISTRIBUTION_SLASH_EVENT:
            return "KV_DISTRIBUTION_SLASH_EVENT";
        case accesscontrol_1.ResourceType.KV_ACCESSCONTROL:
            return "KV_ACCESSCONTROL";
        case accesscontrol_1.ResourceType.KV_ACCESSCONTROL_WASM_DEPENDENCY_MAPPING:
            return "KV_ACCESSCONTROL_WASM_DEPENDENCY_MAPPING";
        case accesscontrol_1.ResourceType.KV_WASM_CODE:
            return "KV_WASM_CODE";
        case accesscontrol_1.ResourceType.KV_WASM_CONTRACT_ADDRESS:
            return "KV_WASM_CONTRACT_ADDRESS";
        case accesscontrol_1.ResourceType.KV_WASM_CONTRACT_STORE:
            return "KV_WASM_CONTRACT_STORE";
        case accesscontrol_1.ResourceType.KV_WASM_SEQUENCE_KEY:
            return "KV_WASM_SEQUENCE_KEY";
        case accesscontrol_1.ResourceType.KV_WASM_CONTRACT_CODE_HISTORY:
            return "KV_WASM_CONTRACT_CODE_HISTORY";
        case accesscontrol_1.ResourceType.KV_WASM_CONTRACT_BY_CODE_ID:
            return "KV_WASM_CONTRACT_BY_CODE_ID";
        case accesscontrol_1.ResourceType.KV_WASM_PINNED_CODE_INDEX:
            return "KV_WASM_PINNED_CODE_INDEX";
        case accesscontrol_1.ResourceType.KV_AUTH_GLOBAL_ACCOUNT_NUMBER:
            return "KV_AUTH_GLOBAL_ACCOUNT_NUMBER";
        case accesscontrol_1.ResourceType.KV_AUTHZ:
            return "KV_AUTHZ";
        case accesscontrol_1.ResourceType.KV_FEEGRANT:
            return "KV_FEEGRANT";
        case accesscontrol_1.ResourceType.KV_FEEGRANT_ALLOWANCE:
            return "KV_FEEGRANT_ALLOWANCE";
        case accesscontrol_1.ResourceType.KV_SLASHING:
            return "KV_SLASHING";
        case accesscontrol_1.ResourceType.KV_SLASHING_VAL_SIGNING_INFO:
            return "KV_SLASHING_VAL_SIGNING_INFO";
        case accesscontrol_1.ResourceType.KV_SLASHING_ADDR_PUBKEY_RELATION_KEY:
            return "KV_SLASHING_ADDR_PUBKEY_RELATION_KEY";
        case accesscontrol_1.ResourceType.KV_BANK_DEFERRED:
            return "KV_BANK_DEFERRED";
        case accesscontrol_1.ResourceType.KV_BANK_DEFERRED_MODULE_TX_INDEX:
            return "KV_BANK_DEFERRED_MODULE_TX_INDEX";
        case accesscontrol_1.ResourceType.KV_EVM:
            return "KV_EVM";
        case accesscontrol_1.ResourceType.KV_EVM_BALANCE:
            return "KV_EVM_BALANCE";
        case accesscontrol_1.ResourceType.KV_EVM_TRANSIENT:
            return "KV_EVM_TRANSIENT";
        case accesscontrol_1.ResourceType.KV_EVM_ACCOUNT_TRANSIENT:
            return "KV_EVM_ACCOUNT_TRANSIENT";
        case accesscontrol_1.ResourceType.KV_EVM_MODULE_TRANSIENT:
            return "KV_EVM_MODULE_TRANSIENT";
        case accesscontrol_1.ResourceType.KV_EVM_NONCE:
            return "KV_EVM_NONCE";
        case accesscontrol_1.ResourceType.KV_EVM_RECEIPT:
            return "KV_EVM_RECEIPT";
        case accesscontrol_1.ResourceType.KV_EVM_S2E:
            return "KV_EVM_S2E";
        case accesscontrol_1.ResourceType.KV_EVM_E2S:
            return "KV_EVM_E2S";
        case accesscontrol_1.ResourceType.KV_EVM_CODE_HASH:
            return "KV_EVM_CODE_HASH";
        case accesscontrol_1.ResourceType.KV_EVM_CODE:
            return "KV_EVM_CODE";
        case accesscontrol_1.ResourceType.KV_EVM_CODE_SIZE:
            return "KV_EVM_CODE_SIZE";
        case accesscontrol_1.ResourceType.KV_BANK_WEI_BALANCE:
            return "KV_BANK_WEI_BALANCE";
        case accesscontrol_1.ResourceType.KV_CT:
            return "KV_CT";
        case accesscontrol_1.ResourceType.KV_CT_ACCOUNT:
            return "KV_CT_ACCOUNT";
        case accesscontrol_1.ResourceType.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
function wasmMessageSubtypeFromJSON(object) {
    switch (object) {
        case 0:
        case "QUERY":
            return accesscontrol_1.WasmMessageSubtype.QUERY;
        case 1:
        case "EXECUTE":
            return accesscontrol_1.WasmMessageSubtype.EXECUTE;
        case -1:
        case "UNRECOGNIZED":
        default:
            return accesscontrol_1.WasmMessageSubtype.UNRECOGNIZED;
    }
}
function wasmMessageSubtypeToJSON(object) {
    switch (object) {
        case accesscontrol_1.WasmMessageSubtype.QUERY:
            return "QUERY";
        case accesscontrol_1.WasmMessageSubtype.EXECUTE:
            return "EXECUTE";
        case accesscontrol_1.WasmMessageSubtype.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
