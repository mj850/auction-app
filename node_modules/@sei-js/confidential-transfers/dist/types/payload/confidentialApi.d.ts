import { MsgApplyPendingBalance, MsgCloseAccount, MsgInitializeAccount, MsgWithdraw, MsgTransfer } from "@sei-js/cosmos/types/confidentialtransfers";
import "./wasm_exec.cjs";
export declare class ConfidentialTransfersWrapper {
    private wasmWrapper;
    constructor();
    initialize(): Promise<void>;
    createWithdraw(signedDenom: Uint8Array, amount: number, address: string, denom: string, currentDecryptableBalance: string, currentAvailableBalance: Uint8Array): MsgWithdraw;
    createInitialize(signedDenom: Uint8Array, address: string, denom: string): MsgInitializeAccount;
    createApplyPendingBalance(signedDenom: Uint8Array, address: string, denom: string, pendingBalanceCreditCounter: number, currentDecryptableBalance: string, currentAvailableBalance: Uint8Array, currentPendingBalanceLo: Uint8Array, currentPendingBalanceHi: Uint8Array): MsgApplyPendingBalance;
    createTransfer(signedDenom: Uint8Array, amount: number, senderAddress: string, recipientAddress: string, denom: string, currentDecryptableBalance: string, currentAvailableBalance: Uint8Array, recipientPubkey: Uint8Array): MsgTransfer;
    createCloseAccount(signedDenom: Uint8Array, address: string, denom: string, currentAvailableBalance: Uint8Array, currentPendingBalanceLo: Uint8Array, currentPendingBalanceHi: Uint8Array): MsgCloseAccount;
    decryptCiphertext(signedDenom: Uint8Array, ciphertext: Uint8Array): bigint;
    decryptAesCiphertext(signedDenom: Uint8Array, aesCiphertext: string): bigint;
}
