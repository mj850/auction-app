/**
 * The address of the IBC precompile contract.
 * @category Cosmos Interoperability
 */
export declare const IBC_PRECOMPILE_ADDRESS: `0x${string}`;
/**
 * The ABI for the IBC precompile contract.
 * @category Cosmos Interoperability
 */
export declare const IBC_PRECOMPILE_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "toAddress";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "port";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "channel";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "denom";
        readonly type: "string";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "uint64";
        readonly name: "revisionNumber";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint64";
        readonly name: "revisionHeight";
        readonly type: "uint64";
    }, {
        readonly internalType: "uint64";
        readonly name: "timeoutTimestamp";
        readonly type: "uint64";
    }, {
        readonly internalType: "string";
        readonly name: "memo";
        readonly type: "string";
    }];
    readonly name: "transfer";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "toAddress";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "port";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "channel";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "denom";
        readonly type: "string";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }, {
        readonly internalType: "string";
        readonly name: "memo";
        readonly type: "string";
    }];
    readonly name: "transferWithDefaultTimeout";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}];
