/**
 * The address of the Distribution precompile contract.
 * @category Cosmos Interoperability
 */
export declare const DISTRIBUTION_PRECOMPILE_ADDRESS: `0x${string}`;
/**
 * The ABI for the Distribution precompile contract.
 * @category Cosmos Interoperability
 */
export declare const DISTRIBUTION_PRECOMPILE_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "withdrawAddr";
        readonly type: "address";
    }];
    readonly name: "setWithdrawAddress";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "validator";
        readonly type: "string";
    }];
    readonly name: "withdrawDelegationRewards";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string[]";
        readonly name: "validators";
        readonly type: "string[]";
    }];
    readonly name: "withdrawMultipleDelegationRewards";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "delegatorAddress";
        readonly type: "address";
    }];
    readonly name: "rewards";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "decimals";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "string";
                    readonly name: "denom";
                    readonly type: "string";
                }];
                readonly internalType: "struct Coin[]";
                readonly name: "coins";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "string";
                readonly name: "validator_address";
                readonly type: "string";
            }];
            readonly internalType: "struct Reward[]";
            readonly name: "rewards";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "decimals";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "denom";
                readonly type: "string";
            }];
            readonly internalType: "struct Coin[]";
            readonly name: "total";
            readonly type: "tuple[]";
        }];
        readonly internalType: "struct Rewards";
        readonly name: "rewards";
        readonly type: "tuple";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
