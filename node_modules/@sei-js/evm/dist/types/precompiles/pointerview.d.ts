/**
 * The address of the Pointerview precompile contract.
 * @category Cosmos Interoperability
 */
export declare const POINTERVIEW_PRECOMPILE_ADDRESS: `0x${string}`;
/**
 * The ABI for the Pointerview precompile contract.
 * @category Cosmos Interoperability
 */
export declare const POINTERVIEW_PRECOMPILE_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "cwAddr";
        readonly type: "string";
    }];
    readonly name: "getCW20Pointer";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "addr";
        readonly type: "address";
    }, {
        readonly internalType: "uint16";
        readonly name: "version";
        readonly type: "uint16";
    }, {
        readonly internalType: "bool";
        readonly name: "exists";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "cwAddr";
        readonly type: "string";
    }];
    readonly name: "getCW721Pointer";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "addr";
        readonly type: "address";
    }, {
        readonly internalType: "uint16";
        readonly name: "version";
        readonly type: "uint16";
    }, {
        readonly internalType: "bool";
        readonly name: "exists";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "token";
        readonly type: "string";
    }];
    readonly name: "getNativePointer";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "addr";
        readonly type: "address";
    }, {
        readonly internalType: "uint16";
        readonly name: "version";
        readonly type: "uint16";
    }, {
        readonly internalType: "bool";
        readonly name: "exists";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
