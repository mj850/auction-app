/**
 * The address of the Staking precompile contract.
 * @category Cosmos Interoperability
 */
export declare const STAKING_PRECOMPILE_ADDRESS: `0x${string}`;
/**
 * The ABI for the Staking precompile contract.
 * @category Cosmos Interoperability
 */
export declare const STAKING_PRECOMPILE_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "valAddress";
        readonly type: "string";
    }];
    readonly name: "delegate";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "srcAddress";
        readonly type: "string";
    }, {
        readonly internalType: "string";
        readonly name: "dstAddress";
        readonly type: "string";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "redelegate";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "valAddress";
        readonly type: "string";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "undelegate";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "delegator";
        readonly type: "address";
    }, {
        readonly internalType: "string";
        readonly name: "valAddress";
        readonly type: "string";
    }];
    readonly name: "delegation";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "denom";
                readonly type: "string";
            }];
            readonly internalType: "struct Balance";
            readonly name: "balance";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "delegator_address";
                readonly type: "string";
            }, {
                readonly internalType: "uint256";
                readonly name: "shares";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "decimals";
                readonly type: "uint256";
            }, {
                readonly internalType: "string";
                readonly name: "validator_address";
                readonly type: "string";
            }];
            readonly internalType: "struct DelegationDetails";
            readonly name: "delegation";
            readonly type: "tuple";
        }];
        readonly internalType: "struct Delegation";
        readonly name: "delegation";
        readonly type: "tuple";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
