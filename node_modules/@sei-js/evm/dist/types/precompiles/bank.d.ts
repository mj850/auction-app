/**
 * The address of the Bank precompile contract.
 * @category Cosmos Interoperability
 */
export declare const BANK_PRECOMPILE_ADDRESS: `0x${string}`;
/**
 * The ABI for the Bank precompile contract.
 * @category Cosmos Interoperability
 */
export declare const BANK_PRECOMPILE_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "acc";
        readonly type: "address";
    }];
    readonly name: "all_balances";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "denom";
            readonly type: "string";
        }];
        readonly internalType: "struct IBank.Coin[]";
        readonly name: "response";
        readonly type: "tuple[]";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "acc";
        readonly type: "address";
    }, {
        readonly internalType: "string";
        readonly name: "denom";
        readonly type: "string";
    }];
    readonly name: "balance";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "denom";
        readonly type: "string";
    }];
    readonly name: "decimals";
    readonly outputs: readonly [{
        readonly internalType: "uint8";
        readonly name: "response";
        readonly type: "uint8";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "denom";
        readonly type: "string";
    }];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "response";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "fromAddress";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "toAddress";
        readonly type: "address";
    }, {
        readonly internalType: "string";
        readonly name: "denom";
        readonly type: "string";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "send";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "toNativeAddress";
        readonly type: "string";
    }];
    readonly name: "sendNative";
    readonly outputs: readonly [{
        readonly internalType: "bool";
        readonly name: "success";
        readonly type: "bool";
    }];
    readonly stateMutability: "payable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "denom";
        readonly type: "string";
    }];
    readonly name: "supply";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "response";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "string";
        readonly name: "denom";
        readonly type: "string";
    }];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly internalType: "string";
        readonly name: "response";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
